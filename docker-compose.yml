services:
  mongodb:
    image: tsivyal/my-mongo-image:latest
    container_name: my_mongo_db
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    restart: always
    networks:
      - backend-network

  backend:
    image: tsivyal/my-backend-image:latest
    container_name: backend
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=mongodb://TsivyaL:MyName1sTsivya@mongodb:27017
      - PYTHON_HOST=python-container
    depends_on:
      - mongodb
      - python
    networks:
      - backend-network
    restart: always

  python:
    image: tsivyal/my-python-image:latest
    container_name: python-container
    volumes:
      - answer-volume:/tmp
    command: ["sh", "-c", "while :; do sleep 1000; done"]  # Keeps the container running
    restart: on-failure
    networks:
      - backend-network

  nodejs:
    image: tsivyal/my-nodejs-image:latest
    container_name: nodejs-container
    volumes:
      - answer-volume:/tmp
    command: ["sh", "-c", "while :; do sleep 1000; done"]  # Keeps the container running
    restart: on-failure
    networks:
      - backend-network

volumes:
  answer-volume:  # Shared volume for communication between containers
  mongo-data:     # Persistent storage for MongoDB data

networks:
  backend-network:
    driver: bridge  # Define a shared network for communication between containers
